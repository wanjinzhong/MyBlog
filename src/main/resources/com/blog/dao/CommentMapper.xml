<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.blog.bean.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.blog.bean.Comment">
    <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent" />
  </resultMap>
  <resultMap type="com.blog.bean.CommentFull" id="CommentFullResultMap" extends="ResultMapWithBLOBs">
  	<result column="user_name" jdbcType="VARCHAR" property="userName"/>
  </resultMap>
  <sql id="Base_Column_List">
    comment_id, user_id, time, article_id
  </sql>
  <sql id="Blob_Column_List">
	comment_content
  </sql>
  <select id="selectFullbyArticleId" parameterType="java.util.Map" resultMap="CommentFullResultMap">
  select comment_id, users.login_name user_name, comment_content, `time`
  from comment join users on users.user_id = comment.user_id 
  where article_id = #{id, jdbcType=INTEGER} 
  order by `time`
  limit #{index, jdbcType=INTEGER}, #{pageSize, jdbcType=INTEGER}  
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <select id="selectCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  select count(*) from comment where article_id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blog.bean.Comment">
    insert into comment (comment_id, user_id, time, 
      article_id, comment_content)
    values (#{commentId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, 
      #{articleId,jdbcType=INTEGER}, #{commentContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.bean.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.bean.Comment">
    update comment
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blog.bean.Comment">
    update comment
    set user_id = #{userId,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      article_id = #{articleId,jdbcType=INTEGER},
      comment_content = #{commentContent,jdbcType=LONGVARCHAR}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.bean.Comment">
    update comment
    set user_id = #{userId,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      article_id = #{articleId,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>