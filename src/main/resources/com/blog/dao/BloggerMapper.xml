<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.BloggerMapper">
	<resultMap id="BaseResultMap" type="com.blog.bean.Blogger">
		<id column="blogger_id" jdbcType="INTEGER" property="bloggerId" />
		<result column="blogger_name" jdbcType="VARCHAR" property="bloggerName" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
	</resultMap>
	<resultMap type="com.blog.bean.Blogger" id="FullResultMap"
		extends="BaseResultMap">
		<result column="login_name" jdbcType="VARCHAR" property="loginName" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="real_name" jdbcType="VARCHAR" property="realName" />
		<result column="birthday" jdbcType="DATE" property="birthday" />
		<result column="sex" jdbcType="INTEGER" property="sex" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="tel" jdbcType="VARCHAR" property="tel" />
		<result column="place" jdbcType="VARCHAR" property="place" />
		<result column="qq" jdbcType="VARCHAR" property="qq" />
		<result column="introduce" jdbcType="VARCHAR" property="introduce" />
		<result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
	</resultMap>
	<sql id="Base_Column_List">
		blogger.blogger_id blogger_id, blogger_name, users.user_id
	</sql>
	<sql id="User_Column_List">
		real_name, birthday, sex, email, tel, place, qq, introduce,
		image_url
	</sql>
	<select id="selectFullByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="FullResultMap">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="User_Column_List"/>
		from blogger
		join users on users.user_id = blogger.user_id
		where blogger_id = #{bloggerId,jdbcType=INTEGER}
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from blogger
		where blogger_id = #{bloggerId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from blogger
		where blogger_id = #{bloggerId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.blog.bean.Blogger">
		insert into blogger (blogger_id, blogger_name, user_id
		)
		values (#{bloggerId,jdbcType=INTEGER}, #{bloggerName,jdbcType=VARCHAR},
		#{userId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.blog.bean.Blogger">
		insert into blogger
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bloggerId != null">
				blogger_id,
			</if>
			<if test="bloggerName != null">
				blogger_name,
			</if>
			<if test="userId != null">
				user_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bloggerId != null">
				#{bloggerId,jdbcType=INTEGER},
			</if>
			<if test="bloggerName != null">
				#{bloggerName,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.blog.bean.Blogger">
		update blogger
		<set>
			<if test="bloggerName != null">
				blogger_name = #{bloggerName,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
		</set>
		where blogger_id = #{bloggerId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.blog.bean.Blogger">
		update blogger
		set blogger_name = #{bloggerName,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=INTEGER}
		where blogger_id = #{bloggerId,jdbcType=INTEGER}
	</update>
</mapper>