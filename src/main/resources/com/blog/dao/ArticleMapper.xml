<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.ArticleMapper">
	<resultMap id="BaseResultMap" type="com.blog.bean.Article">
		<id column="article_id" jdbcType="INTEGER" property="articleId" />
		<result column="blogger_id" jdbcType="INTEGER" property="bloggerId" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="type_id" jdbcType="INTEGER" property="typeId" />
		<result column="keyword" jdbcType="VARCHAR" property="keyword" />
		<result column="reading" jdbcType="INTEGER" property="reading" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.blog.bean.Article">
		<result column="content" jdbcType="LONGVARCHAR" property="content" />
	</resultMap>
	<!-- 所有Article信息的数据 -->
	<resultMap type="com.blog.bean.ArticleFull" id="ArticleFullResult"
		extends="ResultMapWithBLOBs">
		<result column="blogger_name" jdbcType="VARCHAR" property="bloggerName" />
	</resultMap>
	<sql id="Base_Column_List">
		article_id, article.blogger_id blogger_id, title,
		publish_time, update_time, type_id, keyword,
		reading
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	<!-- 获取某个博主的文章总数 -->
	<select id="seclectCount" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		select count(*) from article where blogger_id = #{id,
		jdbcType=INTEGER}
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from article
		where article_id = #{articleId,jdbcType=INTEGER}
	</select>
	<!-- 根据ID查询基本信息 -->
	<select id="selectBaseByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from article
		where article_id = #{articleId,jdbcType=INTEGER}
	</select>
	<!-- 查询基本文章的信息，以阅读量排序 -->
	<select id="selectBaseOrderByReading" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from article
		where blogger_id = #{bloggerId,
		jdbcType=INTEGER}
		order by reading desc
	</select>
	<!-- 查询所有文章的详细信息，以阅读量排序 -->
	<select id="selectAllOrderByReading" resultMap="ArticleFullResult"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		, blogger_name
		from article
		join blogger on article.blogger_id =
		blogger.blogger_id
		where blogger.blogger_id = #{bloggerId,
		jdbcType=INTEGER}
		order by reading desc
	</select>
	<select id="selectBasePrev" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		select * from article
		 where   <![CDATA[article_id < #{articleId, jdbcType=INTEGER}]]> and blogger_id
		=#{bloggerId, jdbcType=INTEGER}
		order by reading asc
		limit 0, 1
	</select>
	<select id="selectBaseNext" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		select * from article
		where  <![CDATA[article_id > #{articleId, jdbcType=INTEGER}]]> and blogger_id =
		#{bloggerId, jdbcType=INTEGER}
		order
		by reading desc
		limit 0, 1
	</select>
	<!-- 查询所有文章的详细信息，以时间排序 -->
	<select id="selectAllOrderByUpdateTime" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		article_id, title
		from article
		join blogger on article.blogger_id =
		blogger.blogger_id
		where blogger.blogger_id = #{bloggerId,
		jdbcType=INTEGER}
		order by update_time desc
		limit 0, 5
	</select>
	<select id="selectFullByPrimaryKey" resultMap="ArticleFullResult"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		, blogger_name
		from article
		join blogger on article.blogger_id =
		blogger.blogger_id
		where article_id = #{articleId,jdbcType=INTEGER}
		limit 0, 10
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		article
		where article_id = #{articleId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.blog.bean.Article">
		insert into article
		(article_id, blogger_id, title,
		publish_time, update_time, type_id,
		keyword, reading, content
		)
		values (#{articleId,jdbcType=INTEGER},
		#{bloggerId,jdbcType=INTEGER},
		#{title,jdbcType=VARCHAR},
		#{publishTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
		#{typeId,jdbcType=INTEGER},
		#{keyword,jdbcType=VARCHAR},
		#{reading,jdbcType=INTEGER},
		#{content,jdbcType=LONGVARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.blog.bean.Article">
		insert into article
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="articleId != null">
				article_id,
			</if>
			<if test="bloggerId != null">
				blogger_id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="publishTime != null">
				publish_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="typeId != null">
				type_id,
			</if>
			<if test="keyword != null">
				keyword,
			</if>
			<if test="reading != null">
				reading,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="articleId != null">
				#{articleId,jdbcType=INTEGER},
			</if>
			<if test="bloggerId != null">
				#{bloggerId,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="publishTime != null">
				#{publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="typeId != null">
				#{typeId,jdbcType=INTEGER},
			</if>
			<if test="keyword != null">
				#{keyword,jdbcType=VARCHAR},
			</if>
			<if test="reading != null">
				#{reading,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateReadingByPrimaryKey" parameterType="java.util.Map">
		update
		article set reading = #{reading,jdbcType=INTEGER}
		where article_id =
		#{articleId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.blog.bean.Article">
		update article
		<set>
			<if test="bloggerId != null">
				blogger_id = #{bloggerId,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="publishTime != null">
				publish_time = #{publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="typeId != null">
				type_id = #{typeId,jdbcType=INTEGER},
			</if>
			<if test="keyword != null">
				keyword = #{keyword,jdbcType=VARCHAR},
			</if>
			<if test="reading != null">
				reading = #{reading,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where article_id = #{articleId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blog.bean.Article">
		update
		article
		set blogger_id = #{bloggerId,jdbcType=INTEGER},
		title =
		#{title,jdbcType=VARCHAR},
		publish_time =
		#{publishTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		type_id = #{typeId,jdbcType=INTEGER},
		keyword = #{keyword,jdbcType=VARCHAR},
		reading =
		#{reading,jdbcType=INTEGER},
		content = #{content,jdbcType=LONGVARCHAR}
		where article_id = #{articleId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.blog.bean.Article">
		update article
		set
		blogger_id = #{bloggerId,jdbcType=INTEGER},
		title =
		#{title,jdbcType=VARCHAR},
		publish_time =
		#{publishTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		type_id = #{typeId,jdbcType=INTEGER},
		keyword = #{keyword,jdbcType=VARCHAR},
		reading =
		#{reading,jdbcType=INTEGER}
		where article_id =
		#{articleId,jdbcType=INTEGER}
	</update>
</mapper>